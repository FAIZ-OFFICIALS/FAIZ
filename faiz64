import os, sys, re, requests, bs4, time, random, json, string
from bs4 import BeautifulSoup
from datetime import datetime
try:
    import requests
except ImportError:
    os.system('pip install requests > /dev/null')
try:
    import bs4
except ImportError:
    print ('\n [×] Modul Bs4 Not installed!...\n')
    os.system('pip install bs4')
def convert(cok):
    __for = 'datr=' + cok['datr'] + ';' + ('sb=' + cok['sb']) + ';' + ('fr=' + cok['fr']) + ';' + ('c_user=' + cok['c_user']) + ';' + ('xs=' + cok['xs'])
    return __for

def GetEmail():
    response = requests.post('https://api.internal.temp-mail.io/api/v3/email/new')
    if response.status_code == 200:
        email = response.json()['email']
        return email
    else:
        print("Error generating email")
        return None

def GetCode(email):
    try:
        response = requests.get(f'https://api.internal.temp-mail.io/api/v3/email/{email}/messages')
        if response.status_code == 200:
            messages = response.json()
            for message in messages:
                if "FB-" in message['subject']:
                    code = message['subject'].split('FB-')[1].split(' ')[0]
                    return code
        else:
            print("Error fetching code")
    except Exception as e:
        print(f"Error: {e}")
    return None

def inbox(session):
    time.sleep(1)
    ses = requests.Session()
    __ = str(time.time()).replace('.', '')[:13]
    data = ses.get(f"https://10minutemail.net/address.api.php?sessionid={session}&_={str(__)}").json()
    if len(data["mail_list"]) !=1:
        address = data["mail_list"][0]["subject"]
        session = address.replace('FB-', '').replace('is your Facebook confirmation code', '')
        return session
def clear():
    os.system('clear')
    print(logo)
#-------------------[LOGO]-------------------#
logo = '''\x1b[38;5;46m
  \x1b[38;5;46mAAA   UU   UU TTTTTTT  OOOOO  
 \x1b[38;5;47mAAAAA  UU   UU   TTT   OO   OO 
\x1b[38;5;48mAA   AA UU   UU   TTT   OO   OO 
\x1b[38;5;49mAAAAAAA UU   UU   TTT   OO   OO 
\x1b[38;5;50mAA   AA  UUUUU    TTT    OOOO0
\033[1;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\x1b[38;5;46m
\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mONWER    \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m MOHAMMAD PARVEZ
\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mFACEBOOK \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m MOHAMMAD PARVEZ
\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mTOOL     \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m FACEBOOK AUTO CREATE
\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mTYPE     \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m PRIMIUM
\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mVERSION  \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m 0.1
\033[1;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\x1b[38;5;46m'''
#-------------------[LINE]-------------------#
def __line__():
    print(f'\033[1;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[1;37m')    
infinix = random.choice(['7060', '8076D', 'F98', 'G636', 'GT 10 Pro', 'Hot', 'Hot 1', 'Hot 10', 'Hot 10 Play', 'Hot 10i', 'Hot 10s', 'Hot 10s NFC', 'Hot 10T', 'Hot 11', 'Hot 11 (2020)', 'Hot 11S', 'Hot 12', 'Hot 12 Play', 'Hot 12 Play NFC', 'Hot 12 Pro', 'Hot 12i', 'Hot 2', 'Hot 20',
    'Zero 8', 'Zero 8i', 'Zero Ultra', 'Zero X', 'Zero X Neo', 'Zero X Pro'])        
boy = [
    "Shanto Hasan",
    "Arif Hossain",
    "Rajib Ahmed",
    "Shakib Al Hasan",
    "Tanvir Rahman",
    "Rifat Chowdhury",
    "Samir Khan",
    "Naimul Islam",
    "Sohel Rana",
    "Farhan Ahmed",
    "Suman Das",
    "Rubel Hossain",
    "Anik Miah",
    "Shahin Alam",
    "Maisha Chowdhury",
    "Ruma Sultana",
    "Shahana Hossain",
    "Tabassum Binte",
    "Farzana Noor",
    "Nahidul Islam",
    "Sabina Khatun"]
ua= f"Mozilla/5.0 (Linux; Android 7.0; {infinix} Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+str(random.randrange(80,105))+".0."+str(random.randrange(1000,5000))+"."+str(random.randrange(100,399))+" Mobile Safari/537.36"
ok = []
cp = []
class create:
    def __init__(self):
        self.loop = 0
        self.gender = []
    
    def start(self):
        clear()
        print('\x1b[1;97m[\x1b[38;5;46m1\x1b[1;97m] \x1b[38;5;46mFACEBOOK ACCOUNT AUTO CREATE');__line__()
        gen = input('\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mSELECT\x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m ')
        print("\033[1;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
        if gen in ['1', '01']:
            self.gender.append('boy')
        else:
            self.gender.append('boy')
        print("\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mLIMIT \x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m 1000\x1b[1;97m-\x1b[38;5;46m10000\x1b[1;97m-\x1b[38;5;46m100000")
        lim = int(input('\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mLIMIT\x1b[38;5;196m>\x1b[1;97m>\x1b[38;5;46m '))
        clear()
        headers = {
            'authority': 'm.facebook.com',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
            'sec-ch-prefers-color-scheme': 'light',
            'sec-ch-ua': '"Not:A-Brand";v="99", "Chromium";v="112"',
            'sec-ch-ua-full-version-list': '"Not:A-Brand";v="99.0.0.0", "Chromium";v="112.0.5615.137"',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-platform': '"Android"',
            'sec-ch-ua-platform-version': '"11.0.0"',
            'sec-fetch-dest': 'document',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-site': 'none',
            'sec-fetch-user': '?1',
            'upgrade-insecure-requests': '1',
            'user-agent': ua,
            'viewport-width': '980',
        }
        headers1 = {
            'authority': 'www.facebook.com',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
            'sec-ch-prefers-color-scheme': 'light',
            'sec-ch-ua': '"Not:A-Brand";v="99", "Chromium";v="112"',
            'sec-ch-ua-full-version-list': '"Not:A-Brand";v="99.0.0.0", "Chromium";v="112.0.5615.137"',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-platform': '"Android"',
            'sec-ch-ua-platform-version': '"11.0.0"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'upgrade-insecure-requests': '1',
            'user-agent': ua,
        }
        OO = '\033[0;97m'
        
        for x in range(lim):
            self.loop += 1
            sys.stdout.write(f"\r\r\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;46mCREATING... {self.loop}|\033[1;32m{str(len(ok))}\033[1;37m|\033[1;31m{str(len(cp))}"),
            sys.stdout.flush()
            
            if 'boy' in self.gender:
                name = random.choice(boy).split(' ')
                sex = '2'
            
            try:
                ses = requests.Session()
                email = GetEmail()  # New email system
                if not email:
                    continue
                
                passw = random.choice([
                    '@12345@', '@#@#@#@#', '@Parvez@', 'Parvez122',
                    '@#৳%@#21', '876876', '009988', '778899',
                    'P@ssw0rd', 'Fuck You', 'Bangladesh'
                ])
                
                self.ses = requests.Session()
                a = self.ses.get('https://m.facebook.com/reg?_fb_noscript', headers=headers)
                loger = re.search('name="logger_id" value="(.*?)"', str(a.text)).group(1)
                ref = BeautifulSoup(a.text, 'html.parser').find('form', {'action': True, "id": "mobile-reg-form", "method": "post"})
                
                self.data = {v.get('name'): v.get('value') for v in ref('input') if v.get('name')}
                self.data.update({
                    "firstname": name[0],
                    "lastname": name[1],
                    "birthday_day": str(random.randint(1, 28)),
                    "birthday_month": str(random.randint(1, 12)),
                    "birthday_year": str(random.randint(1992, 2004)),
                    "reg_email__": email,
                    "sex": sex,
                    "reg_passwd__": passw,
                    "submit": "Sign Up",
                })
                
                gett = self.ses.post('https://m.facebook.com' + ref['action'], headers=headers1, data=self.data)
                getts = self.ses.get('https://m.facebook.com/login/save-device/?login_source=account_creation&logger_id=' + loger + '&app_id=103', headers=headers1)
                
                if 'checkpoint' in getts.url:
                    cp.append(email + passw)
                    #...... print(f'\r\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;196m[LK] {email} \x1b[1;97m|\x1b[38;5;196m {passw}\033[0;97m')
                else:
                    coki = (";").join([ "%s=%s" % (key, value) for key, value in self.ses.cookies.get_dict().items() ])
                    cok = self.ses.cookies.get_dict()
                    print(f'\r\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;196m[\x1b[38;5;46mSUCCESS\x1b[38;5;196m] \x1b[38;5;46m{email} \x1b[1;97m|\x1b[38;5;46m {passw}\033[0;97m\n\x1b[1;97m[\x1b[38;5;46m×\x1b[1;97m] \x1b[38;5;196m[\x1b[38;5;46mCOOKIE\x1b[38;5;196m] \x1b[1;97m{coki}');__line__()
                    ok.append(email + passw)
                    open('/sdcard/AUTO-CREATE.txt','a').write(email+'|'+passw+'|'+coki+'\n')
            except Exception as e:
                pass

def GetEmail():
    try:
        response = requests.post('https://api.internal.temp-mail.io/api/v3/email/new').json()
        return response['email']
    except:
        return None

def GetCode(email):
    try:
        response = requests.get(f'https://api.internal.temp-mail.io/api/v3/email/{email}/messages').text
        code = re.search(r'FB-(\d+)', response).group(1)
        return code
    except:
        return None

create().start()